<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ScriptControl</class>
 <widget class="QWidget" name="ScriptControl">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>739</width>
    <height>423</height>
   </rect>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <property name="leftMargin">
    <number>0</number>
   </property>
   <property name="topMargin">
    <number>0</number>
   </property>
   <property name="rightMargin">
    <number>0</number>
   </property>
   <property name="bottomMargin">
    <number>0</number>
   </property>
   <item>
    <widget class="QSplitter" name="horizontalSplitter">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <widget class="QSplitter" name="verticalSplitter">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Expanding" vsizetype="Preferred">
        <horstretch>0</horstretch>
        <verstretch>4</verstretch>
       </sizepolicy>
      </property>
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <widget class="JSCodeEditor" name="codeEditor">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
         <horstretch>4</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="plainText">
        <string>/***********************************************************************
 This is Open ModSim JavaScript code editor
 Â© Alexandr Ananev, 2023

 Built-in objects Math, Date and String are available in this script

 To read and write registers use Server object

 var value = Server.readCoil(addr)
 var value = Server.readDiscrete(addr)		
 var value = Server.readInput(addr)		
 var value = Server.readHolding(addr)
 var value = Server.readFloat(Register.Holding, addr, swapped)
 var value = Server.readDouble(Register.Holding , addr, swapped)		

 Server.writeCoil(addr, value)
 Server.writeDiscrete(addr, value)
 Server.writeInput(addr, value)	
 Server.writeHolding(addr, value)
 Server.writeFloat(Register.Holding, addr, value, swapped)
 Server.writeDouble(Register.Holding, addr, value, swapped)	

 To store values through periodically script execution use Storage object
 use Storage.setItem(key, value) to store value
 use Storage.getItem(key) to get stored value 
 
 To output debug information use console.log() function

 To break script execution use Script.stop() function
 To get execution run count of  the script use Script.runCount property. On Script start this property equals 0
 To get execution script period use Script.period property
************************************************************************/
</string>
       </property>
       <property name="tabStopDistance">
        <double>20.000000000000000</double>
       </property>
       <property name="placeholderText">
        <string/>
       </property>
      </widget>
      <widget class="QTextBrowser" name="helper">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
         <horstretch>1</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
      </widget>
     </widget>
     <widget class="ConsoleOutput" name="console">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
        <horstretch>0</horstretch>
        <verstretch>1</verstretch>
       </sizepolicy>
      </property>
      <property name="undoRedoEnabled">
       <bool>false</bool>
      </property>
      <property name="readOnly">
       <bool>true</bool>
      </property>
     </widget>
    </widget>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>JSCodeEditor</class>
   <extends>QPlainTextEdit</extends>
   <header>jscodeeditor.h</header>
  </customwidget>
  <customwidget>
   <class>ConsoleOutput</class>
   <extends>QPlainTextEdit</extends>
   <header>consoleoutput.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
