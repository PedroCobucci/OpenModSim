<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>ScriptControl</class>
 <widget class="QWidget" name="ScriptControl">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>739</width>
    <height>423</height>
   </rect>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout">
   <property name="leftMargin">
    <number>0</number>
   </property>
   <property name="topMargin">
    <number>0</number>
   </property>
   <property name="rightMargin">
    <number>0</number>
   </property>
   <property name="bottomMargin">
    <number>0</number>
   </property>
   <item>
    <widget class="QSplitter" name="splitter">
     <property name="orientation">
      <enum>Qt::Vertical</enum>
     </property>
     <widget class="CodeEditor" name="codeEditor">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
        <horstretch>0</horstretch>
        <verstretch>3</verstretch>
       </sizepolicy>
      </property>
      <property name="plainText">
       <string>// This Open ModSim JavaScript
// Â© Alexandr Ananev, 2023
//
// Built-in objects Math, Date and String are available in this script
//
// To output debug information use console object
//
// To read and write registers use Server object
//
// To read coils use code 						var value = Server.readCoil(addr)
// To read discrete inputs use code  		var value = Server.readDiscrete(addr)
// To read input registers use code 		var value = Server.readInput(addr)
// To read holding registers use code		var value = Server.readHolding(addr)
//
// To write coils use code						Server.writeCoil(addr, value)
// To write discrete inputs use code		Server.writeDiscrete(addr, value)
// To write input registers use code		Server.writeInput(addr, value)
// To write holding registers use code	Server.writeHolding(addr, value)
//
// To stop script execution use Script.stop() function
//</string>
      </property>
      <property name="tabStopDistance">
       <double>20.000000000000000</double>
      </property>
     </widget>
     <widget class="QPlainTextEdit" name="console">
      <property name="sizePolicy">
       <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
        <horstretch>0</horstretch>
        <verstretch>1</verstretch>
       </sizepolicy>
      </property>
      <property name="undoRedoEnabled">
       <bool>false</bool>
      </property>
      <property name="readOnly">
       <bool>true</bool>
      </property>
     </widget>
    </widget>
   </item>
  </layout>
  <action name="actionRun">
   <property name="text">
    <string>Run</string>
   </property>
   <property name="toolTip">
    <string>Run Script</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>CodeEditor</class>
   <extends>QPlainTextEdit</extends>
   <header>codeeditor.h</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
